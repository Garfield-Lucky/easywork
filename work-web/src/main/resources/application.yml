server:
  port: 8070
  servlet:
    context-path: /work
application:
  name: work

spring:
  profiles:
    active: dev
  redis:
    host: 127.0.0.1
    password: 123456789
    port: 6379
    database: 0

easywork:
  name: easy-work

druid:
  url: jdbc:mysql://127.0.0.1:3306/springboot
  driver-class: com.mysql.jdbc.Driver
  username: work
  password: 123456
  initial-size: 1
  min-idle: 1
  max-active: 20
  test-on-borrow: true
  timeBetweenEvictionRunsMillis: 9000


## Mybatis 配置
mybatis:
  typeAliasesPackage: com.easy.work.model
  mapperLocations: classpath:mapper/*.xml


thymeleaf:
  ## 是否启用模板缓存。
  cache: true
  ## 是否检查模板位置是否存在。
  check-template: true
  ## 是否为Web框架启用Thymeleaf视图分辨率。
  enabled: true
  ## 编码格式, 默认UTF-8
  encoding: UTF-8
  ## 应用于模板的模板模式。另请参阅Thymeleaf的TemplateMode枚举。
  mode: HTML
  ## 后缀 默认 .html
  suffix: .html
  ## 模板文件存放位置  , 默认 classpath:/templates/
  prefix: classpath:/templates/

  config:
    #jwt配置信息
    jwt:
      #生成token的密钥
      secret: b68a1c36fbde4d42bbeabd29b70db88e
      #token过期时间 单位毫秒
      expire-time: 3600000


sftp-pool:
  # 主机ip
  host: 192.168.182.131
  # 端口号
  port: 2222
  # 用户名
  username: wuzhangwei
  # 密码
  password: 123456

  connectTimeout: 3000

  dataTimeout: 30000
  # 连接池配置
  pool:
    # 对象最大数量
    max-total: 1
    # 最大空闲对象数量
    max-idle: 1
    # 最小空闲对象数量
    min-idle: 0
    # 表示使用FIFO获取对象
    lifo: true
    # 不使用lock的公平锁
    fairness: false
    # 获取一个对象的最大等待时间
    max-wait-millis: 5000
    # 对象最小的空闲时间
    min-evictable-idle-time-millis: -1
    # 驱逐线程的超时时间
    evictor-shutdown-timeout-millis: 10000
    # 对象最小的空间时间，保留最小空闲数量
    soft-min-evictable-idle-time-millis: 1800000
    # 检测空闲对象线程每次检测的空闲对象的数量
    num-tests-per-eviction-run: 3
    # 在创建对象时检测对象是否有效
    test-on-create: true
    # 在从对象池获取对象时是否检测对象有效
    test-on-borrow: true
    # 在向对象池中归还对象时是否检测对象有效
    test-on-return: true
    # 在检测空闲对象线程检测到对象不需要移除时，是否检测对象的有效性
    test-while-idle: true
    # 空闲对象检测线程的执行周期
    time-between-eviction-runs-millis: 600000
    # 当对象池没有空闲对象时，新的获取对象的请求是否阻塞
    block-when-exhausted: true
    # 是否注册JMX
    jmx-enabled: false
    # JMX前缀，当jmxEnabled为true时有效
    jmx-name-prefix: pool
    # 使用jmxNameBase + jmxNamePrefix + i来生成ObjectName，当jmxEnabled为true时有效
    jmx-name-base: sftp
  # 废弃对象跟踪配置
  abandoned:
    # 从对象池中获取对象的时候进行清理
    remove-abandoned-on-borrow: true
    # 池维护（evicor）是否执行放弃的对象删除
    remove-abandoned-on-maintenance: true
    # 对象被获取后多长时间没有返回给对象池，则放弃对象
    remove-abandoned-timeout: 300
    # 是否记录放弃对象的应用程序代码的堆栈跟踪
    log-abandoned: false
    # 是否记录完整堆栈信息，当logAbandoned为true时有效
    require-full-stack-trace: false
    # 如果池实现了org.apache.commons.pool2.UsageTracking接口，是否记录完整堆栈信息用来辅助调试废弃对象，当logAbandoned为true时有效
    use-usage-tracking: false
